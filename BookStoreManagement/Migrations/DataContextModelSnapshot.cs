// <auto-generated />
using System;
using BookStoreManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStoreManagement.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookStoreManagement.Models.ChuDe", b =>
                {
                    b.Property<int>("MaChuDe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChuDe"), 1L, 1);

                    b.Property<int>("SachMaSach")
                        .HasColumnType("int");

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChuDe");

                    b.HasIndex("SachMaSach");

                    b.ToTable("ChuDes");
                });

            modelBuilder.Entity("BookStoreManagement.Models.DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonHang"), 1L, 1);

                    b.Property<bool>("DaThanhToan")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrangDH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDonHang");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("BookStoreManagement.Models.DonHangSach", b =>
                {
                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDonHang", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("DonHangSach");
                });

            modelBuilder.Entity("BookStoreManagement.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DienThoai")
                        .HasColumnType("int");

                    b.Property<int>("DonHangMaDonHang")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.HasIndex("DonHangMaDonHang");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("BookStoreManagement.Models.NhaXuatBan", b =>
                {
                    b.Property<int>("MaNXB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNXB"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DienThoai")
                        .HasColumnType("int");

                    b.Property<int>("SachMaSach")
                        .HasColumnType("int");

                    b.Property<string>("TenNXB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNXB");

                    b.HasIndex("SachMaSach");

                    b.ToTable("NhaXuatBans");
                });

            modelBuilder.Entity("BookStoreManagement.Models.Sach", b =>
                {
                    b.Property<int>("MaSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSach"), 1L, 1);

                    b.Property<string>("AnhBia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSach");

                    b.ToTable("Sachs");
                });

            modelBuilder.Entity("BookStoreManagement.Models.TacGia", b =>
                {
                    b.Property<int>("MaTacGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTacGia"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DienThoai")
                        .HasColumnType("int");

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuSu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTacGia");

                    b.ToTable("TacGias");
                });

            modelBuilder.Entity("BookStoreManagement.Models.TacGiaSach", b =>
                {
                    b.Property<int>("MaTacGia")
                        .HasColumnType("int");

                    b.Property<int>("MacSach")
                        .HasColumnType("int");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTacGia", "MacSach");

                    b.HasIndex("MacSach");

                    b.ToTable("TacGiaSach");
                });

            modelBuilder.Entity("BookStoreManagement.Models.ChuDe", b =>
                {
                    b.HasOne("BookStoreManagement.Models.Sach", "Sach")
                        .WithMany("ChuDes")
                        .HasForeignKey("SachMaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("BookStoreManagement.Models.DonHangSach", b =>
                {
                    b.HasOne("BookStoreManagement.Models.DonHang", "DonHang")
                        .WithMany("DonHangSaches")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreManagement.Models.Sach", "Sach")
                        .WithMany("DonHangSaches")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("BookStoreManagement.Models.KhachHang", b =>
                {
                    b.HasOne("BookStoreManagement.Models.DonHang", "DonHang")
                        .WithMany("KhachHangs")
                        .HasForeignKey("DonHangMaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("BookStoreManagement.Models.NhaXuatBan", b =>
                {
                    b.HasOne("BookStoreManagement.Models.Sach", "Sach")
                        .WithMany("NhaXuatBans")
                        .HasForeignKey("SachMaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("BookStoreManagement.Models.TacGiaSach", b =>
                {
                    b.HasOne("BookStoreManagement.Models.TacGia", "TacGia")
                        .WithMany("TacGiaSaches")
                        .HasForeignKey("MaTacGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreManagement.Models.Sach", "Sach")
                        .WithMany("TacGiaSaches")
                        .HasForeignKey("MacSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");

                    b.Navigation("TacGia");
                });

            modelBuilder.Entity("BookStoreManagement.Models.DonHang", b =>
                {
                    b.Navigation("DonHangSaches");

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("BookStoreManagement.Models.Sach", b =>
                {
                    b.Navigation("ChuDes");

                    b.Navigation("DonHangSaches");

                    b.Navigation("NhaXuatBans");

                    b.Navigation("TacGiaSaches");
                });

            modelBuilder.Entity("BookStoreManagement.Models.TacGia", b =>
                {
                    b.Navigation("TacGiaSaches");
                });
#pragma warning restore 612, 618
        }
    }
}
